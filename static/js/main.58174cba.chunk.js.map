{"version":3,"sources":["components/Button.js","components/Header.js","components/TaskComp.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","TaskComp","task","onDelete","onToggle","remainder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58174cba.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} \r\n            style={{backgroundColor: color}} \r\n            className='btn'>{text}</button>\r\n        </div>\r\n    )\r\n}\r\nButton.defaultProps = {\r\n    color: 'steelbule'\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n    test: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types';\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close': 'Add'} onClick= {onAdd}/>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Traker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n\r\n}\r\nexport default Header","import {FaTimes } from 'react-icons/fa'\r\n\r\nconst TaskComp = ({task, onDelete, onToggle}) => {\r\n    return(\r\n        <div className= {`task ${task.remainder ? 'remainder': ''}`} \r\n        onDoubleClick= {() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} <FaTimes style={{color:'red', cursor: 'pointer'}}\r\n                onClick={() => onDelete(task.id )}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskComp","import TaskComp from './TaskComp'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    \r\n    return(\r\n        <>\r\n            {tasks.map((task) => (\r\n            <TaskComp key={task.id} task={task}\r\n            onDelete = {onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n        const [text, setText] = useState('')\r\n        const [day, setDay] = useState('')\r\n        const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className= 'add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' \r\n                placeholder='add Task' \r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Date and Time</label>\r\n                <input type='text' \r\n                placeholder='add Date & Time' \r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type='submit' value= 'Save Task' className='btn btn-block'/>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState} from 'react'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(\n      [\n          {\n              id:1,\n              text: 'Doctors Appointment',\n              day: 'Feb 5th at 2:30 pm',\n              remainder: true,\n          },\n          {\n              id:2,\n              text: 'Meeting at School',\n              day: 'Feb 6th at 1:30 pm',\n              remainder: true,\n          },\n          {\n              id:3,\n              text: 'Food Shooping',\n              day: 'Feb 7th at 2:30 pm',\n              remainder: false,\n          }\n      ]\n  )\n// Add Task\n  const addTask = (task) =>{\n    console.log(task)\n    // const id = Math.floor(Math.random() * 10000) + 1\n    const id = 90\n    const newTask = {id, ...task}\n    setTasks([...tasks, newTask])\n  }\n\n// Delete Tasks \n  const deleteTask = (id) => {\n    \n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task) => task.id === id ? \n    {...task, remainder: !task.remainder}: task))\n  }\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd ={addTask}/>}\n      {tasks.length > 0 ?<Tasks tasks={tasks} \n      onDelete={deleteTask}\n      onToggle = {toggleReminder}/> : \n      'No tasks to show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}